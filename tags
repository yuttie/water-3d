!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5	//
CC	Makefile	/^CC       = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS   = $(OPT) -Wall -std=gnu99 `sdl-config --cflags` $(DEBUG)$/;"	m
CXX	Makefile	/^CXX      = g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -O2 -Wall `sdl-config --cflags` $(DEBUG)$/;"	m
Calculate	main.c	/^void Calculate()$/;"	f
CheckCPUID	cpuidutil.h	/^bool CheckCPUID()$/;"	f
CheckMMX	cpuidutil.h	/^bool CheckMMX()$/;"	f
CheckSSE	cpuidutil.h	/^bool CheckSSE()$/;"	f
CheckSSE2	cpuidutil.h	/^bool CheckSSE2()$/;"	f
CreateRefractionTable	main.c	/^Uint16 *CreateRefractionTable()$/;"	f
CreateRippleData	main.c	/^PosData *CreateRippleData()$/;"	f
DEBUG	Makefile	/^DEBUG    = -g -pg$/;"	m
EventProc	main.c	/^bool EventProc()$/;"	f
ExitProc	main.c	/^void ExitProc()$/;"	f
GetEDX	cpuidutil.h	/^unsigned int GetEDX()$/;"	f
INCLUDES	Makefile	/^INCLUDES = -I.$/;"	m
InitProc	main.c	/^void InitProc(int argc, char **argv)$/;"	f
InitSDL	main.c	/^void InitSDL()$/;"	f
LD	Makefile	/^LD       = gcc$/;"	m
LDFLAGS	Makefile	/^LDFLAGS  = $(DEBUG)$/;"	m
LIBS	Makefile	/^LIBS     = `sdl-config --libs` -lSDL_gfx$/;"	m
MAX_RESOLUTION	main.c	/^const int MAX_RESOLUTION = 65536 \/ 4;$/;"	v
MSG_ERROR_INIT_SDL	main.c	/^const char const *MSG_ERROR_INIT_SDL =$/;"	v
MSG_ERROR_INIT_VIDEO	main.c	/^const char const *MSG_ERROR_INIT_VIDEO =$/;"	v
MSG_ERROR_LOAD_IMAGE	main.c	/^const char const *MSG_ERROR_LOAD_IMAGE =$/;"	v
MSG_ERROR_OPTION	main.c	/^const char const *MSG_ERROR_OPTION =$/;"	v
MSG_HELP	main.c	/^const char const *MSG_HELP =$/;"	v
OBJS	Makefile	/^OBJS     = main.o imgscale.o$/;"	m
OPT	Makefile	/^OPT      = -O2$/;"	m
PI	main.c	/^const double PI = 3.1415926535;    \/\/ 円周率$/;"	v
PROF	Makefile	/^PROF     = gprof$/;"	m
PaintToSurface	main.c	/^void PaintToSurface(SDL_Surface *target)$/;"	f
ParseArgument	main.c	/^bool ParseArgument(int argc, char **argv)$/;"	f
PosData	main.c	/^typedef Sint16 PosData;$/;"	t	file:
ProgConfig	main.c	/^} ProgConfig;$/;"	t	file:
RM	Makefile	/^RM       = rm -f$/;"	m
RippleOut	main.c	/^void RippleOut(int x, int y)$/;"	f
SM_BI_LINEAR	imgscale.h	/^    SM_SIMPLE,$/;"	e	enum:ScalingMethod
SM_SIMPLE	imgscale.h	/^{$/;"	e	enum:ScalingMethod
ScaleCopySurface	imgscale.c	/^void ScaleCopySurface(enum ScalingMethod method, SDL_Surface *srcSurface, SDL_Surface *desSurface)$/;"	f
ScalingMethod	imgscale.h	/^enum ScalingMethod$/;"	g
TARGET	Makefile	/^TARGET   = water$/;"	m
__CPUIDUTIL_H	cpuidutil.h	12;"	d
__ProgConfig	main.c	/^typedef struct __ProgConfig$/;"	s	file:
attRate	main.c	/^    double attRate;         \/\/ 減衰率$/;"	m	struct:__ProgConfig	file:
csrIPDiv	main.c	/^    int    csrIPDiv;        \/\/ カーソルの補間を何分割で行うか$/;"	m	struct:__ProgConfig	file:
depthRes	main.c	/^    int    depthRes;        \/\/ 深さの解像度$/;"	m	struct:__ProgConfig	file:
g_Conf	main.c	/^ProgConfig   g_Conf;         \/\/ プログラムの設定$/;"	v
g_pBgImage	main.c	/^SDL_Surface *g_pBgImage;     \/\/ 背景サーフェス$/;"	v
g_pCrntData	main.c	/^PosData     *g_pCrntData;    \/\/ 今の水面データ$/;"	v
g_pCrntRipl	main.c	/^PosData     *g_pCrntRipl;    \/\/ 現在の波紋データへのポインタ$/;"	v
g_pNextData	main.c	/^PosData     *g_pNextData;    \/\/ 次の水面データ$/;"	v
g_pPrevData	main.c	/^PosData     *g_pPrevData;    \/\/ 前の水面データ$/;"	v
g_pRfraTbl	main.c	/^Uint16      *g_pRfraTbl;     \/\/ 屈折による変移量テーブル$/;"	v
g_pRipples	main.c	/^PosData    **g_pRipples;     \/\/ 波紋データ$/;"	v
g_pScreen	main.c	/^SDL_Surface *g_pScreen;      \/\/ スクリーンサーフェス$/;"	v
heightRes	main.c	/^    int    heightRes;       \/\/ シミュレートする水面の高さの解像度$/;"	m	struct:__ProgConfig	file:
isFullScreen	main.c	/^    bool   isFullScreen;    \/\/ フルスクリーンか否か$/;"	m	struct:__ProgConfig	file:
main	main.c	/^int main(int argc, char **argv)$/;"	f
pBgImgPath	main.c	/^    char  *pBgImgPath;      \/\/ 背景イメージのファイル名$/;"	m	struct:__ProgConfig	file:
riplDepth	main.c	/^    double riplDepth;       \/\/ 発生させる波紋の最大深さ$/;"	m	struct:__ProgConfig	file:
riplRadius	main.c	/^    int    riplRadius;      \/\/ 発生させる波紋の半径$/;"	m	struct:__ProgConfig	file:
scale	main.c	/^    double scale;$/;"	m	struct:__ProgConfig	file:
widthRes	main.c	/^    int    widthRes;        \/\/ シミュレートする水面の幅の解像度$/;"	m	struct:__ProgConfig	file:
wndHeight	main.c	/^    int    wndHeight;       \/\/ ウィンドウの高さ$/;"	m	struct:__ProgConfig	file:
wndWidth	main.c	/^    int    wndWidth;        \/\/ ウィンドウの幅$/;"	m	struct:__ProgConfig	file:
